[{"/Users/wendymichels/WebstormProjects/greenery/src/index.js":"1","/Users/wendymichels/WebstormProjects/greenery/src/reportWebVitals.js":"2","/Users/wendymichels/WebstormProjects/greenery/src/App.js":"3","/Users/wendymichels/WebstormProjects/greenery/src/context/AuthContext.js":"4","/Users/wendymichels/WebstormProjects/greenery/src/pages/Profile.js":"5","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignUp.js":"6","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignIn.js":"7","/Users/wendymichels/WebstormProjects/greenery/src/pages/Home.js":"8","/Users/wendymichels/WebstormProjects/greenery/src/components/Header.js":"9","/Users/wendymichels/WebstormProjects/greenery/src/components/AvatarUploader.js":"10","/Users/wendymichels/WebstormProjects/greenery/src/components/Search.js":"11","/Users/wendymichels/WebstormProjects/greenery/src/components/Footer.js":"12","/Users/wendymichels/WebstormProjects/greenery/src/pages/UpdateUser.js":"13"},{"size":742,"mtime":1611253274566,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611252598227,"results":"16","hashOfConfig":"15"},{"size":1324,"mtime":1613728696976,"results":"17","hashOfConfig":"15"},{"size":1545,"mtime":1613816067658,"results":"18","hashOfConfig":"15"},{"size":1309,"mtime":1613985907209,"results":"19","hashOfConfig":"15"},{"size":3764,"mtime":1613985584991,"results":"20","hashOfConfig":"15"},{"size":2620,"mtime":1613819121663,"results":"21","hashOfConfig":"15"},{"size":365,"mtime":1613743133093,"results":"22","hashOfConfig":"15"},{"size":1599,"mtime":1613659840578,"results":"23","hashOfConfig":"15"},{"size":2065,"mtime":1613824997876,"results":"24","hashOfConfig":"15"},{"size":4997,"mtime":1613730375298,"results":"25","hashOfConfig":"15"},{"size":415,"mtime":1613659518113,"results":"26","hashOfConfig":"15"},{"size":306,"mtime":1613729383586,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5l6vyn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/wendymichels/WebstormProjects/greenery/src/index.js",[],["60","61"],"/Users/wendymichels/WebstormProjects/greenery/src/reportWebVitals.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/App.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/context/AuthContext.js",["62"],"import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    })\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setAuthState({\n                ...authState,\n                status: 'done',\n            })\n        }, 2000)\n    }, []);\n\n    function login(data) {\n        localStorage.setItem('token', data.accessToken);\n\n        setAuthState({\n            ...authState,\n            user: {\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n                avatar: data.avatar\n            }\n        })\n\n    }\n\n    function logout() {\n\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout }}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n\n\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n    }\n}\n\nexport {\n    AuthContext,\n    useAuthState,\n    AuthContextProvider,\n}\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/Profile.js",["63"],"/Users/wendymichels/WebstormProjects/greenery/src/pages/SignUp.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/SignIn.js",["64"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\nimport { ReactComponent as Spinner } from '../assets/refresh.svg';\n\nfunction SignIn() {\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated } = useAuthState();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            history.push('/profile');\n        }\n    }, [isAuthenticated]);\n\n    async function onSubmit(event) {\n        toggleLoading(true);\n        setError('');\n\n        event.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\n                username: username,\n                password: password,\n            })\n\n            login(response.data);\n            console.log(response.data)\n        } catch(e) {\n            console.error(e);\n            setError('Login failed');\n        }\n        toggleLoading(false);\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <div className=\"text-form-container\">\n                <form className=\"text-form\" onSubmit={onSubmit}>\n                    <label htmlFor=\"username-field\">\n                        Username:\n                        <input\n                            type=\"text\"\n                            id=\"username-field\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                    </label>\n\n                    <label htmlFor=\"password-field\">\n                        Password:\n                        <input\n                            type=\"password\"\n                            id=\"password-field\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                    </label>\n                    <button\n                        type=\"submit\"\n                        className=\"form-button\"\n                        disabled={loading}\n                    >\n                        {loading ? <Spinner className=\"loading-icon\" /> : 'Login'}\n                    </button>\n                    {error && <p>{error}</p>}\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/Home.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/components/Header.js",["65","66"],"import React, { useContext, useEffect } from 'react';\nimport { useHistory, link } from 'react-router-dom';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\n\n\nfunction Header() {\n    const history = useHistory();\n\n    const { isAuthenticated } = useAuthState();\n    const { logout } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (isAuthenticated === false) {\n            history.push('/signin');\n        }\n    }, [isAuthenticated]);\n\n    return (\n        <header>\n            <div>\n                <button className=\"home-button\"\n                        type=\"button\"\n                        onClick={() => history.push('/')}\n                >\n                    Home\n                </button>\n                {isAuthenticated ? (\n                    <button\n                        type=\"button\"\n                        onClick={() => logout()}\n                    >\n                        Logout\n                    </button>\n                ) : (\n                    <>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/signin')}\n                        >\n                            Signin\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/signup')}\n                        >\n                            Register\n                        </button>\n\n                    </>\n                )}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/AvatarUploader.js",["67","68","69","70"],"import React, { useState } from \"react\";\nimport './Styles/AvatarUploader.css';\nimport Spinner from '../assets/loader.gif'\nimport axios from \"axios\";\n\nexport default function AvatarUploader() {\n\n    const [baseImage, setBaseImage] = useState(\"\")\n    const [loading, toggleLoading] = useState(false);\n\n    const uploadImage = async (e) => {\n        try {\n            const response = await axios.put('http://localhost:8080/api/auth/user/putavatar', {\n                avatar: e\n            })\n\n        } catch(e) {\n            console.error(e);\n        }\n        // toggleLoading(false);\n    }\n\n\n    // const uploadImage = async (e) => {\n    //     const file = e.target.files[0];\n    //     const base64 = await convertBase64(file)\n    //     console.log(base64)\n    //     setBaseImage(base64)\n    // };\n\n    // const convertBase64 = (file) => {\n    //     return new Promise((resolve, reject) => {\n    //         const fileReader = new FileReader();\n    //         fileReader.readAsDataURL(file);\n    //\n    //         fileReader.onload = () => {\n    //             resolve(fileReader.result);\n    //         };\n    //\n    //         fileReader.onerror = (error) => {\n    //             reject(error);\n    //         };\n    //     });\n    // };\n\n    return (\n        <div className=\"avatar-uploader-container\">\n            <form>\n            <input\n                type=\"text\"\n                name=\"avatar\"\n                id = \"avatar\"\n\n            />\n                <button\n                    type='submit'\n                    className=\"form-button\"\n                    disabled={loading}\n                    onClick = { (e) => {\n                        // console.log(document.getElementById(\"avatar\").value);\n                        uploadImage( document.getElementById(\"avatar\").value);\n                    }}\n                >\n                    {loading ? <Spinner className=\"loading-icon\" /> : 'Upload Avatar' }\n                </button>\n            </form>\n            <br></br>\n            <img src={baseImage} height=\"200px\"/>\n        </div>\n    )\n}\n","/Users/wendymichels/WebstormProjects/greenery/src/components/Search.js",["71","72"],"import React from 'react';\nimport {render} from \"@testing-library/react\";\nimport './Styles/Search.css';\nimport axios from 'axios';\nimport Loader from '../assets/loader.gif'\n\n//Juiste url is:`https://trefle.io/api/v1/plants/search?&q=${query}&token=${token}&page=${pageNumber}`\n//trefle token: 'BC09Zl9KrfbB6rTcw_kq-YBdKRpfjYITLdotI3wrZNc';\n\n//temporary url:\n//temporary token:\n\nclass Search extends React.Component {\n\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            query: '',\n            results: {},\n            loading: false,\n            message: '',\n            totalResults: 0,\n            totalPages: 0,\n            currentPageNo: 0,\n        };\n\n        this.cancel = '';\n    }\n\n    // getPageCount = ( total, denominator ) => {\n    //     const divisible = 0 === total % denominator;\n    //     const valueToBeAdded = divisible ? 0 : 1;\n    //     return Math.floor ( total/denominator ) + valueToBeAdded;\n    // }\n\n    fetchSearchResults = (updatedPageNo = '', query) => {\n        const token = \"20310953-81227b282e6055f395eba7999\";\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\n        const searchUrl = `https://pixabay.com/api/?key=${token}&q=${query}${pageNumber}`;\n\n        if ( this.cancel ) {\n             this.cancel.cancel();\n        }\n\n        this.cancel = axios.CancelToken.source();\n\n        axios.get( searchUrl, {\n            cancelToken: this.cancel.token\n        } )\n            .then(res => {\n                const resultNotFoundMsg = ! res.data.hits.length\n                                        ? 'there are no more search results '\n                                        :   '';\n                this.setState({\n                    results: res.data.hits,\n                    message: resultNotFoundMsg,\n                    loading: false\n                })\n                console.log(res.data)\n            })\n            .catch( error => {\n                if ( axios.isCancel(error) || error ) {\n                    this.setState({\n                        loading: false,\n                        message: 'Failed to fetch the data'\n                    })\n                }\n            } )\n    };\n\n    handleOnInputChange = ( event ) => {\n        const query = event.target.value;\n        if ( ! query ) {\n            this.setState({ query, results: {}, message: ''} );\n        }\n\n        this.setState( {query: query, loading: true, message: '' }, () => {\n                this.fetchSearchResults(1, query);\n            });\n    //             results: {},\n    //             message: '',\n    //             totalPages: 0,\n    //             totalResults: 0\n    //         }\n    //         );\n    //     } else {\n    //         this.setState( {\n    //             query,\n    //             loading: true,\n    //             message: '' },\n    //             () => {\n    //             this.fetchSearchResults( 1, query );\n    //         } );\n    //     }\n    };\n\n\n    renderSearchResults = () => {\n        const { results } = this.state;\n\n        if ( Object.keys( results ).length && results.length ) {\n            return (\n                <div className=\"results-container\">\n                    { results.map( result => {\n                        return (\n                            <a key={ result.id } href={ result.previewURL } className=\"result-item\">\n                                <h6 className=\"image-username\">{result.user}</h6>\n                                <div className=\"image-wrapper\">\n                                    <img className=\"image\" src={ result.previewURL } alt={`${result.user} image`}/>\n                                </div>\n                            </a>\n                        )\n                    } ) }\n\n                </div>\n            )\n        }\n    };\n\n    render() {\n        const { query, loading, message } = this.state;\n        // console.log(this.state)\n        return (\n            <div className=\"container\">\n                {/*\tHeading*/}\n                <h2 className=\"heading\">Let's find some crops</h2>\n                {/* Search Input*/}\n                <label className=\"search-label\" htmlFor=\"search-input\">\n                    <input\n                        type=\"text\"\n                        name=\"query\"\n                        value={ query }\n                        id=\"search-input\"\n                        placeholder=\"Search...\"\n                        onChange={this.handleOnInputChange}\n                        />\n                    <i className=\"fas fa-search search-icon\" aria-hidden=\"true\" />\n\n                </label>\n\n                    {/*error*/}\n                { message && <p className=\"message\">{ message }</p>}\n\n                    {/*Loader*/}\n                    <img src={Loader} className={`search-loading ${ loading ? 'show' : 'hide'}`} alt=\"loader\"/>\n\n                    {/*result*/}\n                    { this.renderSearchResults() }\n\n                    </div>\n        )\n    }\n}\n\n\nexport default Search;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/Footer.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/UpdateUser.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":8,"nodeType":"79","endLine":20,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":10,"column":11,"nodeType":"83","messageId":"84","endLine":10,"endColumn":23},{"ruleId":"77","severity":1,"message":"85","line":23,"column":8,"nodeType":"79","endLine":23,"endColumn":25,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":2,"column":22,"nodeType":"83","messageId":"84","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"85","line":16,"column":8,"nodeType":"79","endLine":16,"endColumn":25,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":8,"column":23,"nodeType":"83","messageId":"84","endLine":8,"endColumn":35},{"ruleId":"81","severity":1,"message":"90","line":9,"column":21,"nodeType":"83","messageId":"84","endLine":9,"endColumn":34},{"ruleId":"81","severity":1,"message":"91","line":13,"column":19,"nodeType":"83","messageId":"84","endLine":13,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":68,"column":13,"nodeType":"94","endLine":68,"endColumn":50},{"ruleId":"81","severity":1,"message":"95","line":2,"column":9,"nodeType":"83","messageId":"84","endLine":2,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":110,"column":37,"nodeType":"94","endLine":110,"endColumn":116},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["100"],"no-unused-vars","'profileImage' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["101"],"'link' is defined but never used.",["102"],"'setBaseImage' is assigned a value but never used.","'toggleLoading' is assigned a value but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},"Update the dependencies array to be: [authState]",{"range":"108","text":"109"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"110","text":"111"},{"range":"112","text":"111"},[468,470],"[authState]",[742,759],"[history, isAuthenticated]",[446,463]]