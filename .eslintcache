[{"/Users/wendymichels/WebstormProjects/greenery/src/index.js":"1","/Users/wendymichels/WebstormProjects/greenery/src/reportWebVitals.js":"2","/Users/wendymichels/WebstormProjects/greenery/src/App.js":"3","/Users/wendymichels/WebstormProjects/greenery/src/context/AuthContext.js":"4","/Users/wendymichels/WebstormProjects/greenery/src/pages/Profile.js":"5","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignUp.js":"6","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignIn.js":"7","/Users/wendymichels/WebstormProjects/greenery/src/pages/Home.js":"8","/Users/wendymichels/WebstormProjects/greenery/src/components/Header.js":"9","/Users/wendymichels/WebstormProjects/greenery/src/components/AvatarUploader.js":"10","/Users/wendymichels/WebstormProjects/greenery/src/components/Search.js":"11","/Users/wendymichels/WebstormProjects/greenery/src/components/Footer.js":"12","/Users/wendymichels/WebstormProjects/greenery/src/pages/UpdateUser.js":"13","/Users/wendymichels/WebstormProjects/greenery/src/components/PageNavigation.js":"14"},{"size":742,"mtime":1611253274566,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1611252598227,"results":"17","hashOfConfig":"16"},{"size":1324,"mtime":1613728696976,"results":"18","hashOfConfig":"16"},{"size":1545,"mtime":1613816067658,"results":"19","hashOfConfig":"16"},{"size":1210,"mtime":1614155116728,"results":"20","hashOfConfig":"16"},{"size":3890,"mtime":1614155116687,"results":"21","hashOfConfig":"16"},{"size":2619,"mtime":1614155116746,"results":"22","hashOfConfig":"16"},{"size":329,"mtime":1614155116651,"results":"23","hashOfConfig":"16"},{"size":1593,"mtime":1614155116762,"results":"24","hashOfConfig":"16"},{"size":2065,"mtime":1613824997876,"results":"25","hashOfConfig":"16"},{"size":6559,"mtime":1614356275835,"results":"26","hashOfConfig":"16"},{"size":415,"mtime":1613659518113,"results":"27","hashOfConfig":"16"},{"size":3604,"mtime":1614155116718,"results":"28","hashOfConfig":"16"},{"size":1019,"mtime":1614356405729,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5l6vyn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wendymichels/WebstormProjects/greenery/src/index.js",[],["65","66"],"/Users/wendymichels/WebstormProjects/greenery/src/reportWebVitals.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/App.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/context/AuthContext.js",["67"],"import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    })\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setAuthState({\n                ...authState,\n                status: 'done',\n            })\n        }, 2000)\n    }, []);\n\n    function login(data) {\n        localStorage.setItem('token', data.accessToken);\n\n        setAuthState({\n            ...authState,\n            user: {\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n                avatar: data.avatar\n            }\n        })\n\n    }\n\n    function logout() {\n\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout }}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n\n\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n    }\n}\n\nexport {\n    AuthContext,\n    useAuthState,\n    AuthContextProvider,\n}\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/Profile.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/SignUp.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/SignIn.js",["68"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\nimport { ReactComponent as Spinner } from '../assets/refresh.svg';\n\nfunction SignIn() {\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated } = useAuthState();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            history.push('/profile');\n        }\n    }, [isAuthenticated]);\n\n    async function onSubmit(event) {\n        toggleLoading(true);\n        setError('');\n\n        event.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\n                username: username,\n                password: password,\n            })\n\n            login(response.data);\n            console.log(response.data)\n        } catch(e) {\n            console.error(e);\n            setError('Login failed');\n        }\n        toggleLoading(false);\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <div className=\"text-form-container\">\n                <form className=\"text-form\" onSubmit= { onSubmit } >\n\n                    <label htmlFor=\"username-field\">\n                        Username:\n                        <input\n                            type=\"text\"\n                            id=\"username-field\"\n                            value={ username }\n                            onChange={ (e) => setUsername(e.target.value) } />\n                    </label>\n\n                    <label htmlFor=\"password-field\">\n                        Password:\n                        <input\n                            type=\"password\"\n                            id=\"password-field\"\n                            value={ password }\n                            onChange={ (e) => setPassword(e.target.value) } />\n                    </label>\n\n                    <button\n                        type=\"submit\"\n                        className=\"form-button\"\n                        disabled={ loading }\n                    >\n                        { loading ? <Spinner className=\"loading-icon\" /> : 'Login' }\n                    </button>\n                    { error && <p> { error } </p>}\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/Home.js",["69"],"import React from 'react';\nimport { useAuthState } from '../context/AuthContext';\nimport Search from \"../components/Search\";\n\nfunction Home() {\n    const { isAuthenticated } = useAuthState();\n\n    return (\n        <>\n            <h1>Welcome to the Greenery</h1>\n            < Search />\n        </>\n    );\n}\n\nexport default Home;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/Header.js",["70"],"import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\n\n\nfunction Header() {\n    const history = useHistory();\n\n    const { isAuthenticated } = useAuthState();\n    const { logout } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (isAuthenticated === false) {\n            history.push('/signin');\n        }\n    }, [isAuthenticated]);\n\n    return (\n        <header>\n            <div>\n                <button className=\"home-button\"\n                        type=\"button\"\n                        onClick={() => history.push('/')}\n                >\n                    Home\n                </button>\n                {isAuthenticated ? (\n                    <button\n                        type=\"button\"\n                        onClick={() => logout()}\n                    >\n                        Logout\n                    </button>\n                ) : (\n                    <>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/signin')}\n                        >\n                            Signin\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/signup')}\n                        >\n                            Register\n                        </button>\n\n                    </>\n                )}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/AvatarUploader.js",["71","72","73","74"],"import React, { useState } from \"react\";\nimport './Styles/AvatarUploader.css';\nimport Spinner from '../assets/loader.gif'\nimport axios from \"axios\";\n\nexport default function AvatarUploader() {\n\n    const [baseImage, setBaseImage] = useState(\"\")\n    const [loading, toggleLoading] = useState(false);\n\n    const uploadImage = async (e) => {\n        try {\n            const response = await axios.put('http://localhost:8080/api/auth/user/putavatar', {\n                avatar: e\n            })\n\n        } catch(e) {\n            console.error(e);\n        }\n        // toggleLoading(false);\n    }\n\n\n    // const uploadImage = async (e) => {\n    //     const file = e.target.files[0];\n    //     const base64 = await convertBase64(file)\n    //     console.log(base64)\n    //     setBaseImage(base64)\n    // };\n\n    // const convertBase64 = (file) => {\n    //     return new Promise((resolve, reject) => {\n    //         const fileReader = new FileReader();\n    //         fileReader.readAsDataURL(file);\n    //\n    //         fileReader.onload = () => {\n    //             resolve(fileReader.result);\n    //         };\n    //\n    //         fileReader.onerror = (error) => {\n    //             reject(error);\n    //         };\n    //     });\n    // };\n\n    return (\n        <div className=\"avatar-uploader-container\">\n            <form>\n            <input\n                type=\"text\"\n                name=\"avatar\"\n                id = \"avatar\"\n\n            />\n                <button\n                    type='submit'\n                    className=\"form-button\"\n                    disabled={loading}\n                    onClick = { (e) => {\n                        // console.log(document.getElementById(\"avatar\").value);\n                        uploadImage( document.getElementById(\"avatar\").value);\n                    }}\n                >\n                    {loading ? <Spinner className=\"loading-icon\" /> : 'Upload Avatar' }\n                </button>\n            </form>\n            <br></br>\n            <img src={baseImage} height=\"200px\"/>\n        </div>\n    )\n}\n",["75","76"],"/Users/wendymichels/WebstormProjects/greenery/src/components/Search.js",["77"],"/Users/wendymichels/WebstormProjects/greenery/src/components/Footer.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/UpdateUser.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/components/PageNavigation.js",["78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":20,"column":8,"nodeType":"88","endLine":20,"endColumn":10,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":23,"column":8,"nodeType":"88","endLine":23,"endColumn":25,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":13,"nodeType":"94","messageId":"95","endLine":6,"endColumn":28},{"ruleId":"86","severity":1,"message":"90","line":16,"column":8,"nodeType":"88","endLine":16,"endColumn":25,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"97","line":8,"column":23,"nodeType":"94","messageId":"95","endLine":8,"endColumn":35},{"ruleId":"92","severity":1,"message":"98","line":9,"column":21,"nodeType":"94","messageId":"95","endLine":9,"endColumn":34},{"ruleId":"92","severity":1,"message":"99","line":13,"column":19,"nodeType":"94","messageId":"95","endLine":13,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":68,"column":13,"nodeType":"102","endLine":68,"endColumn":50},{"ruleId":"82","replacedBy":"103"},{"ruleId":"84","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":115,"column":37,"nodeType":"102","endLine":115,"endColumn":117},{"ruleId":"107","severity":1,"message":"108","line":4,"column":1,"nodeType":"109","endLine":39,"endColumn":2},{"ruleId":"92","severity":1,"message":"110","line":8,"column":17,"nodeType":"94","messageId":"95","endLine":8,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":14,"column":13,"nodeType":"102","endLine":23,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":26,"column":13,"nodeType":"102","endLine":34,"endColumn":14},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["116"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar",["117"],"'setBaseImage' is assigned a value but never used.","'toggleLoading' is assigned a value but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["113"],["114"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'showNextLink' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},"Update the dependencies array to be: [authState]",{"range":"123","text":"124"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"125","text":"126"},{"range":"127","text":"126"},[468,470],"[authState]",[742,759],"[history, isAuthenticated]",[440,457]]