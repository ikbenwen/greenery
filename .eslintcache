[{"/Users/wendymichels/WebstormProjects/greenery/src/index.js":"1","/Users/wendymichels/WebstormProjects/greenery/src/reportWebVitals.js":"2","/Users/wendymichels/WebstormProjects/greenery/src/App.js":"3","/Users/wendymichels/WebstormProjects/greenery/src/context/AuthContext.js":"4","/Users/wendymichels/WebstormProjects/greenery/src/pages/Profile.js":"5","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignUp.js":"6","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignIn.js":"7","/Users/wendymichels/WebstormProjects/greenery/src/pages/Home.js":"8","/Users/wendymichels/WebstormProjects/greenery/src/components/Header.js":"9","/Users/wendymichels/WebstormProjects/greenery/src/components/AvatarUploader.js":"10","/Users/wendymichels/WebstormProjects/greenery/src/components/Search.js":"11","/Users/wendymichels/WebstormProjects/greenery/src/components/Footer.js":"12","/Users/wendymichels/WebstormProjects/greenery/src/pages/UpdateUser.js":"13"},{"size":742,"mtime":1611253274566,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611252598227,"results":"16","hashOfConfig":"15"},{"size":1324,"mtime":1613728696976,"results":"17","hashOfConfig":"15"},{"size":1509,"mtime":1613213024490,"results":"18","hashOfConfig":"15"},{"size":1241,"mtime":1613729201959,"results":"19","hashOfConfig":"15"},{"size":3539,"mtime":1613726301349,"results":"20","hashOfConfig":"15"},{"size":2587,"mtime":1613660263846,"results":"21","hashOfConfig":"15"},{"size":435,"mtime":1613569336226,"results":"22","hashOfConfig":"15"},{"size":1599,"mtime":1613659840578,"results":"23","hashOfConfig":"15"},{"size":3519,"mtime":1613728952287,"results":"24","hashOfConfig":"15"},{"size":4997,"mtime":1613730375298,"results":"25","hashOfConfig":"15"},{"size":415,"mtime":1613659518113,"results":"26","hashOfConfig":"15"},{"size":306,"mtime":1613729383586,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5l6vyn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/wendymichels/WebstormProjects/greenery/src/index.js",[],["61","62"],"/Users/wendymichels/WebstormProjects/greenery/src/reportWebVitals.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/App.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/context/AuthContext.js",["63"],"import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    })\n\n    useEffect(() => {\n\n        setTimeout(() => {\n            setAuthState({\n                ...authState,\n                status: 'done',\n            })\n        }, 2000)\n    }, []);\n\n    function login(data) {\n        localStorage.setItem('token', data.accessToken);\n\n        setAuthState({\n            ...authState,\n            user: {\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n            }\n        })\n\n    }\n\n    function logout() {\n\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout }}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n\n\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n    }\n}\n\nexport {\n    AuthContext,\n    useAuthState,\n    AuthContextProvider,\n}\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/Profile.js",["64","65","66"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuthState } from '../context/AuthContext';\nimport AvatarUploader from \"../components/AvatarUploader\";\nimport sandwich from '../assets/adventuretimesandwich.png';\nimport granny from '../assets/funnygrannyprofilepic.jpg';\nimport './Styles/Profile.css';\n\nfunction Profile() {\n    const { user } = useAuthState();\n\n    return (\n        <>\n            <div className=\"profile-container\">\n                <div className=\"avatar-flip\">\n                    <img src={granny} height=\"150\" width=\"150\" />\n                    <img src={sandwich} height=\"150\" width=\"150\" />\n                </div>\n            {user && (\n                <>\n                    <h2>{user.username}</h2>\n                    <p className=\"profile-text\"><strong>Email:</strong> {user.email}</p>\n                    <p className=\"profile-text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                        Accusamus ad asperiores aspernatur aut consectet</p>\n                </>\n            )}\n\n            <p>Back <Link to=\"/\">Home</Link></p>\n                <p> <Link to=\"/update\"> Upload Avatar</Link></p>\n            </div>\n\n        </>\n    );\n}\n\nexport default Profile;\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/SignUp.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/SignIn.js",["67","68"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\nimport { ReactComponent as Spinner } from '../assets/refresh.svg';\n\nfunction SignIn() {\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated } = useAuthState();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            history.push('/profile');\n        }\n    }, [isAuthenticated]);\n\n    async function onSubmit(event) {\n        toggleLoading(true);\n        setError('');\n\n        event.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\n                username: username,\n                password: password,\n            })\n\n            login(response.data);\n        } catch(e) {\n            console.error(e);\n            setError('Login failed');\n        }\n        toggleLoading(false);\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <div className=\"text-form-container\">\n                <form className=\"text-form\" onSubmit={onSubmit}>\n                    <label htmlFor=\"username-field\">\n                        Username:\n                        <input\n                            type=\"text\"\n                            id=\"username-field\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                    </label>\n\n                    <label htmlFor=\"password-field\">\n                        Password:\n                        <input\n                            type=\"password\"\n                            id=\"password-field\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                    </label>\n                    <button\n                        type=\"submit\"\n                        className=\"form-button\"\n                        disabled={loading}\n                    >\n                        {loading ? <Spinner className=\"loading-icon\" /> : 'Login'}\n                    </button>\n                    {error && <p>{error}</p>}\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;\n","/Users/wendymichels/WebstormProjects/greenery/src/pages/Home.js",["69","70","71"],"import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\nimport Search from \"../components/Search\";\n\nfunction Home() {\n    const { isAuthenticated } = useAuthState();\n    console.log(isAuthenticated);\n\n\n    return (\n        <>\n            <h1>Welcome to the Greenery</h1>\n            < Search />\n\n        </>\n    );\n}\n\nexport default Home;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/Header.js",["72","73"],"import React, { useContext, useEffect } from 'react';\nimport { useHistory, link } from 'react-router-dom';\nimport { AuthContext, useAuthState } from '../context/AuthContext';\n\n\nfunction Header() {\n    const history = useHistory();\n\n    const { isAuthenticated } = useAuthState();\n    const { logout } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (isAuthenticated === false) {\n            history.push('/signin');\n        }\n    }, [isAuthenticated]);\n\n    return (\n        <header>\n            <div>\n                <button className=\"home-button\"\n                        type=\"button\"\n                        onClick={() => history.push('/')}\n                >\n                    Home\n                </button>\n                {isAuthenticated ? (\n                    <button\n                        type=\"button\"\n                        onClick={() => logout()}\n                    >\n                        Logout\n                    </button>\n                ) : (\n                    <>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/signin')}\n                        >\n                            Signin\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => history.push('/signup')}\n                        >\n                            Register\n                        </button>\n\n                    </>\n                )}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/AvatarUploader.js",["74","75","76","77"],"import React, { useState } from 'react';\nimport axios from \"axios\";\nimport { ReactComponent as Spinner} from '../assets/refresh.svg';\nimport './Styles/AvatarUploader.css';\n\n\nfunction AvatarSubmitForm() {\n\n    const [avatar, setAvatar] = useState('');\n\n    const [createUserSuccess, setCreateUserSuccess] = useState(false);\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n    // let _handleReaderLoaded;\n\n\n            let _handleReaderLoaded = (readerEvt) => {\n            let binaryString = readerEvt.target.result\n            this.setState({\n                base64TextString: btoa(binaryString)\n            })\n        }\n\n\n   let onFileSubmit = (e) => {\n        e.preventDefault()\n        const preview = document.getElementById('profile-picture');\n        console.log(\"binary string:\", this.state.base64TextString)\n\n        let payload = {image: this.state.base64TextString}\n        fetch(`http://localhost:3000/users/${this.props.user.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(resp => resp.json())\n            .then(json => console.log(json))\n\n        preview.src = \"data.image/png;base64,\" + this.state.base64TextString\n    }\n\n\n\n\nasync function onSubmit(event) {\n       toggleLoading(true);\n       setError('');\n\n       event.preventDefault();\n\n       try {\n           const response = await axios.post('http://localhost:3000', {\n               avatar: avatar\n           });\n           console.log(response.data);\n           if (response.status === 200) {\n               setCreateUserSuccess(true);\n           }\n       } catch(e) {\n           console.error(e);\n           if (e.message.includes('400')) {\n               setError('Please choose a different file to upload');\n           } else {\n               setError('Oops! Something went wrong, please try again');\n           }\n       }\n       toggleLoading(false);\n   }\n\n\n    return (\n        <div className=\"avatar-uploader\">\n            <h2>Upload Avatar</h2>\n            {createUserSuccess === true && (\n                <h2 className=\"message-succes\">Avatar is geüpload</h2>\n            )}\n            <form className=\"avatar-form\"\n                  onSubmit={(e) => this.onSubmit(e)}\n                  onChange={(e) => this.onChange(e)}>\n                <input\n                    type='file'\n                    value={avatar}\n                    name='image'\n                    id='file'\n                    accept='.jpeg, .png, jpg'\n                    onChange ={ (e) => {\n                        console.log(\"file to upload:\", e.target.files[0])\n                        let file = e.target.files[0]\n\n                        if (file) {\n                            const reader = new FileReader();\n\n                            reader.onload = this._handleReaderLoaded.bind(this)\n\n                            reader.readAsBinaryString(file)\n                        }\n                    }}\n                />\n                <button\n                    type='submit'\n                    className=\"form-button\"\n                    disabled={loading}\n                >\n                    {loading ? <Spinner className=\"loading-icon\" /> : 'Upload Avatar' }\n                </button>\n                {error &&  <p>{error}</p>}\n            </form>\n        </div>\n    );\n}\n\nexport default AvatarSubmitForm;\n","/Users/wendymichels/WebstormProjects/greenery/src/components/Search.js",["78","79"],"/Users/wendymichels/WebstormProjects/greenery/src/components/Footer.js",[],"/Users/wendymichels/WebstormProjects/greenery/src/pages/UpdateUser.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":20,"column":8,"nodeType":"86","endLine":20,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":16,"column":21,"nodeType":"94","endLine":16,"endColumn":66},{"ruleId":"92","severity":1,"message":"93","line":17,"column":21,"nodeType":"94","endLine":17,"endColumn":68},{"ruleId":"88","severity":1,"message":"95","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"84","severity":1,"message":"96","line":23,"column":8,"nodeType":"86","endLine":23,"endColumn":25,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"98","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":27},{"ruleId":"88","severity":1,"message":"95","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"99","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":21},{"ruleId":"88","severity":1,"message":"100","line":2,"column":22,"nodeType":"90","messageId":"91","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"96","line":16,"column":8,"nodeType":"86","endLine":16,"endColumn":25,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"102","line":9,"column":20,"nodeType":"90","messageId":"91","endLine":9,"endColumn":29},{"ruleId":"88","severity":1,"message":"103","line":17,"column":17,"nodeType":"90","messageId":"91","endLine":17,"endColumn":36},{"ruleId":"88","severity":1,"message":"104","line":25,"column":8,"nodeType":"90","messageId":"91","endLine":25,"endColumn":20},{"ruleId":"88","severity":1,"message":"105","line":48,"column":16,"nodeType":"90","messageId":"91","endLine":48,"endColumn":24},{"ruleId":"88","severity":1,"message":"106","line":2,"column":9,"nodeType":"90","messageId":"91","endLine":2,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":110,"column":37,"nodeType":"94","endLine":110,"endColumn":116},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.","ArrayExpression",["111"],"no-unused-vars","'AvatarUploader' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["112"],"'useContext' is defined but never used.","'AuthContext' is defined but never used.","'link' is defined but never used.",["113"],"'setAvatar' is assigned a value but never used.","'_handleReaderLoaded' is assigned a value but never used.","'onFileSubmit' is assigned a value but never used.","'onSubmit' is defined but never used.","'render' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"116","fix":"118"},"Update the dependencies array to be: [authState]",{"range":"119","text":"120"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"121","text":"122"},{"range":"123","text":"122"},[468,470],"[authState]",[748,765],"[history, isAuthenticated]",[446,463]]